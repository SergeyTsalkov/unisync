
rsync --archive --delete --exclude='.git' --exclude='unisync' /Users/sergey/unisync/ sergey@51.79.19.179:unisync

{
  local: /path/to/stuff
  remote: /path/to/stuff
  username: (required for ssh, ignored for directtls)
  host: [ip]
  port: (defaults to 22 for ssh, required for directtls)
  method: ssh | nativessh | directtls
  prefer: local | remote | newer | older (default: newer)
  cache: filename (default: [name].cache)
}

example:
  unisync ~/localpath user@host:remotepath/
  unisync myhost.json

GITIGNORE:
  - prefix ! negates pattern, unless preceeded by \
  - slash at start or middle anchors pattern to the start
  - slash at end matches only directory

  path.Match() rules apply:
  - * matches 0 or more chars except /
  - ? matches single char except /
  - [A-Z0-9] type ranges are available

  - **/foo matches foo anywhere
  - foo/** matches all files/dirs inside foo, to any depth
  - foo/**/bar matches foo/bar, foo/a/bar, foo/a/b/bar, and so on
  - any other use of ** is just equivalent to *




TODO:
  - ignore feature in config (use .gitignore format?)
  - dump server connection on error, auto reconect and retry
  - handle timeouts: on connect (regardless of method); use PING once a minute to catch disconects at any point
  - nativessh method
  - direct / directtls methods
  - handle fswatch events on both sides
  - work without config file, from command line; choose cache name intelligently

  

  - progress bar, nicer-looking console progress on sync
    maybe send PROGRESS {path: bigfile.txt, progress: 5} every second if receiving file takes more than 1 second
    will need to send size as part of PUSH so other side knows expected file size (even if it's not guaranteed)
    <- thisfile.txt
    -> somedir/thatfile.txt
    <- DEL otherfile.txt
    -> CHMOD asfasf.txt rw-r--r--
    <- [5%] bigfile.txt

  - client should delete any .unisync-tmp files on abrupt exit, including if user hits Ctrl+C


       



