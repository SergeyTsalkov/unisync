
rsync --archive --delete --exclude='.git' --exclude='unisync' /Users/sergey/unisync/ sergey@ark:unisync

{
  local: /path/to/stuff
  remote: /path/to/stuff
  username: (required for ssh, ignored for directtls)
  host: [ip]
  port: (defaults to 22 for ssh, required for directtls)
  method: ssh | nativessh | directtls
  prefer: local | remote | newer | older (default: newer)
  cache: filename (default: [name].cache)
}

mtls := minitls.New()
mtls.Save("path/to/save") // save json of private key and CA cert
minitls.Load("path/to/save")
minitls.BuildAndSign() // returns signed cert, usable for client or server

example:
  unisync ~/localpath user@host:remotepath/
  unisync myhost.json
  unisync -start myhost.json (run in background)
  unisync -stop myhost.json (stop running in background)
  unisync -log myhost.json (show+tail log)
  unisync -stopall
  unisync -status (list jobs running in background)


TODO:
  - error handling
    - dump server connection on error, auto reconect and retry
    - client should delete any .unisync-tmp files on abrupt exit, including if user hits Ctrl+C
    
  - test on Windows, OpenBSD, etc
  - use start/stop/stopall/status/log to manage background workers




